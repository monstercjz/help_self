[Settings]
# =================================================
# --- 基本监控目标配置 ---
# =================================================

# 【必需】要监控的游戏进程名，必须带 .exe 后缀
ProcessName = Game.exe

# 【必需】健康状态下，应有的进程数量
RequiredProcessCount = 6


# =================================================
# --- 状态模板配置 ---
# =================================================

# 【必需】用于识别“卡住/掉线”状态的模板图片文件名。可提供多个，用英文逗号分隔。
TemplateStuckImageNames = template_stuck_1.png, template_stuck_2.png

# “卡住”模板的匹配阈值 (0.0到1.0的小数)。值越高越严格。建议 0.8
StuckTemplateThreshold = 0.8

# 【必需】用于识别“成功/健康”状态的模板图片文件名 (例如关闭按钮X的图标)
TemplateSuccessImageName = template_close_button.png

# “成功”模板的匹配阈值。图标类模板通常可以设置得更高以求精确。建议 0.8 或 0.9
SuccessTemplateThreshold = 0.8

# 【必需】屏幕上应找到多少个“成功”模板才算真正恢复正常
RequiredSuccessCount = 6


# =================================================
# --- 循环与超时控制 ---
# =================================================

# 【必需】网络共享文件夹的路径，用于存放告警日志文件
AlertSharePath = \\192.168.3.3\002 云主机游戏必备\info

# 主循环的间隔时间（秒）。即每隔多少秒进行一次轻量级的进程数检查。
LoopInterval = 30

# 在“重量级诊断”模式下的总超时时间（秒）。超过这个时间未能解决问题，则放弃本次纠正。
TimeoutSeconds = 7200


# =================================================
# --- 高级性能与区域选项 ---
# =================================================

# 是否为“卡住”模板启用区域搜索 (1 = 开启, 0 = 关闭)。
# 如果卡住的界面位置固定，开启此项可提升性能。
EnableStuckAreaSearch = 0

# 如果开启，请设置“卡住”模板的搜索区域 (左, 上, 右, 下)。
StuckSearchAreaBbox = 0,0,1920,1080

# 是否为“成功X”模板启用区域搜索 (1 = 开启, 0 = 关闭)。
# 【强烈建议开启】以排除屏幕其他区域的干扰。
EnableSuccessAreaSearch = 1

# 如果开启，请设置“成功X”模板的搜索区域 (左, 上, 右, 下)。
# 使用 test_find_x.py 脚本来帮助你获取这个值。
SuccessSearchAreaBbox = 700, 0, 960, 400

# 是否在检测到“卡住”模板时，保存当前屏幕截图 (1 = 开启, 0 = 关闭)
SaveStuckScreenshot = 1

# 如果开启，截图将保存到此目录。如果目录不存在，程序会自动创建。
ScreenshotSavePath = stuck_screenshots


[ClickAction]
# =================================================
# --- 自动点击操作配置 ---
# =================================================

# 是否在找到“卡住”模板后，执行自动点击操作 (1 = 开启, 0 = 关闭)
EnableClick = 1

# 点击位置的X轴偏移量，相对于找到的“卡住”模板图片的【中心点】
ClickOffsetX = 700

# 点击位置的Y轴偏移量，相对于找到的“卡住”模板图片的【中心点】
ClickOffsetY = 0

# 在诊断模式中，每次点击后，等待多少秒再进行下一次检查，给游戏响应时间。
ClickRetryDelay = 10

[LoginScreenCheck]
# =================================================
# --- (新功能) 独立登录界面检测配置 (两阶段搜索) ---
# =================================================

# 是否启用独立的登录界面检测与最小化操作 (1 = 开启, 0 = 关闭)
EnableLoginScreenCheck = 1

# 【阶段一】用于识别“登录界面”的模板图片文件名
TemplateLoginImageName = template_login.png

# 【阶段一】“登录界面”模板的匹配阈值 (0.0到1.0的小数)
LoginTemplateThreshold = 0.8

# 【阶段二】用于识别“最小化按钮”的模板图片文件名
TemplateMinimizeButtonImageName = template_minimize.png

# 【阶段二】“最小化按钮”模板的匹配阈值。图标类建议使用高阈值
MinimizeButtonTemplateThreshold = 0.9

# 【关键】以上两个模板的【严格】搜索区域 (左, 上, 右, 下)。
# 建议设置为新窗口可能出现的右上角一小块区域。
LoginSearchAreaBbox = 1100, 0, 1600, 900

# 点击最小化后，等待多少秒再进行下一次检查。
LoginClickDelay = 10

[Notification]
# =================================================
# --- 远程通知配置 ---
# =================================================

# 是否启用Webhook远程通知 (1 = 开启, 0 = 关闭)
EnableWebhookNotification = 1

# Webhook通知配置
# 主机上运行的 alert_receiver.py 服务的URL
WebhookURL = http://192.168.3.3:5000/alert